/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GameIntro;
import edu.upv.poo.Practica12;

import edu.upv.poo.gamesapi.Score;
import edu.upv.poo.gamesapi.ScoresClient;
import upv.edu.poo.GetScore.GetScore;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HARDCORE
 */
public class PortadaGame extends javax.swing.JFrame {

    /**
     * Creates new form PortadaGame
     */
    //Optenemos la clase score 
    GetScore Gscore = new GetScore();
    
    private static boolean defaultColor = true;
    //generamos un arreglo de string
    String[] scor= new String[10000];
    //LLamamos a la clas ScoresClientes
    private ScoresClient clnt = new ScoresClient(); 
    //declaramos una variable para realizar conteos temporales
    private int temp=0;
    //generamos un modelo de tabla score
    private DefaultTableModel scores = new DefaultTableModel();
    public PortadaGame() {
        
        initComponents();
        //hacemos uso del metodo visualizar para mostrar los scores
        visualizarS();
        JPScore.setSize(550, 350);
        JPScore.add(new JScrollPane(TbScore));
        JPScore.setVisible(true);
        this.setLocation(200,100);
        lblPic.setIcon(new javax.swing.ImageIcon("C:\\Users\\HARDCORE\\Desktop\\Herramientas\\Practica12\\Practica12\\src\\Img\\Title.png"));
        
    }
    //generamos la tabla y le mandamos el modelo
    JTable TbScore = new JTable(scores);
        //generamos un panel
        JPanel JPScore = new JPanel();
 private void visualizarS(){
     //se empeso a construir la tabla
     //generando la columna
     this.scores.addColumn("Scores ");
            //se envia el nombre del juego al servidor y nos regresa una lista de scores
             List<Score> scoresG = clnt.getScores("Arkanoid");
             
            //System.out.println("Cant scores: " + scoresG.size());
            //se agrega un formato de fecha
            
            SimpleDateFormat f = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
            
            temp=0;
            for (Score i : scoresG) {
                //posible Error al llamar al servidor
                try{
                    //if(temp <= scoresG2.size()-1){
                        scor[temp]=i.getPlayer() + " - " + i.getScore() + " - " + f.format(i.getDate());
                        System.out.println(i.getPlayer() + " - " + i.getScore() + " - " + f.format(i.getDate()));
                    //}
                    
                }catch (Exception ex) {
                    //En la pantalla se mostrara una notificacion de qque no hay conexion
                ex.printStackTrace();
                System.out.println("Error de conexion: " + ex.getMessage());
                 }
                //el contador ira incrementando en 1
                temp++;
            }
            //el temp se reinicia
            temp=0;
            //se genera un ciclo infinito
        while(true){
        //se agregan las columnas
         this.scores.addRow(new Object[]{scor[temp]});
        //si la variable temporal es igual al tamano del score menos null
        if(temp == scoresG.size()-1){
            //salimos
        break;
        }
        //aumenta el contador por iteraccion
        temp++;
          
        
        }
        
        
    }

 
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelGame = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        BTNScore = new javax.swing.JButton();
        lblPic = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusableWindowState(false);
        setLocation(new java.awt.Point(50, 50));
        setName("Arkanoid"); // NOI18N
        setType(java.awt.Window.Type.POPUP);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        PanelGame.setBackground(new java.awt.Color(0, 0, 0));
        PanelGame.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PanelGameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PanelGameKeyReleased(evt);
            }
        });
        PanelGame.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Enter Game");
        jButton1.setBorder(null);
        jButton1.setContentAreaFilled(false);
        jButton1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jButton1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jButton1MouseMoved(evt);
            }
        });
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jButton1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jButton1KeyPressed(evt);
            }
        });
        PanelGame.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 250, 305, 51));

        BTNScore.setBackground(new java.awt.Color(0, 0, 0));
        BTNScore.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        BTNScore.setForeground(new java.awt.Color(255, 255, 255));
        BTNScore.setText("Score");
        BTNScore.setBorder(null);
        BTNScore.setContentAreaFilled(false);
        BTNScore.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                BTNScoreMousePressed(evt);
            }
        });
        BTNScore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNScoreActionPerformed(evt);
            }
        });
        PanelGame.add(BTNScore, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 310, 305, 51));

        lblPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Title.png"))); // NOI18N
        lblPic.setText("jLabel1");
        PanelGame.add(lblPic, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 790, 210));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelGame, javax.swing.GroupLayout.DEFAULT_SIZE, 810, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelGame, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PanelGameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PanelGameKeyReleased

    }//GEN-LAST:event_PanelGameKeyReleased

    private void PanelGameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PanelGameKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_PanelGameKeyPressed
    //se genera un JFrame
    JFrame f = new JFrame();
    private void BTNScoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNScoreActionPerformed
        //se Agrega el Panel al Formulario
        f.add(JPScore);
        //se le agrega las dimenciones del formulario
        f.setSize(550, 350);
        //se inserta una localizacion en la pantalla
        f.setLocation(200,100);
        // se muestra
        f.setVisible(true);
        
    }//GEN-LAST:event_BTNScoreActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Se llama al metodo para correr el juego
        RunGame();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseMoved
     
    }//GEN-LAST:event_jButton1MouseMoved

    private void BTNScoreMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BTNScoreMousePressed
      
    }//GEN-LAST:event_BTNScoreMousePressed

    private void jButton1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButton1KeyPressed
    }//GEN-LAST:event_jButton1KeyPressed

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formMousePressed

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
      if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            
        RunGame();
        }

    }//GEN-LAST:event_formKeyPressed

    private void jButton1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseDragged
       //setBackground(Color.YELLOW);
    }//GEN-LAST:event_jButton1MouseDragged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PortadaGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PortadaGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PortadaGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PortadaGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new PortadaGame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNScore;
    private javax.swing.JPanel PanelGame;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel lblPic;
    // End of variables declaration//GEN-END:variables

        
    private void RunGame() {
        //oculta la ventana de ejecucion
        setDefaultCloseOperation(this.HIDE_ON_CLOSE);
        //generamos un  metodo run para ejecutar el juego en un hilo de ejecucion
        Runnable miRunnable = new Runnable(){
           @Override
           public void run() {
              try
            {
               Practica12 Game = new Practica12();
               Game.setVisible(true);
               Thread.sleep(10000); //Tarea que consume diez segundos.
               System.out.println("Terminé");
               
            }
            catch (Exception e)
            {
               e.printStackTrace();
            } 
           }
       };
        //Se crea el hilo de ejecucion
        Thread hilo = new Thread (miRunnable);
        //se inicia el hilo de ejecucion
        hilo.start();
        setVisible(true);
        
    }

    
}
